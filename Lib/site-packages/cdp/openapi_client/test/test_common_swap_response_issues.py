# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.common_swap_response_issues import CommonSwapResponseIssues

class TestCommonSwapResponseIssues(unittest.TestCase):
    """CommonSwapResponseIssues unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommonSwapResponseIssues:
        """Test CommonSwapResponseIssues
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommonSwapResponseIssues`
        """
        model = CommonSwapResponseIssues()
        if include_optional:
            return CommonSwapResponseIssues(
                allowance = {"currentAllowance":"1000000000","spender":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},
                balance = {"token":"0x6B175474E89094C44Da98b954EedeAC495271d0F","currentBalance":"1000000000000000000","requiredBalance":"1000000000000000000"},
                simulation_incomplete = False
            )
        else:
            return CommonSwapResponseIssues(
                allowance = {"currentAllowance":"1000000000","spender":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},
                balance = {"token":"0x6B175474E89094C44Da98b954EedeAC495271d0F","currentBalance":"1000000000000000000","requiredBalance":"1000000000000000000"},
                simulation_incomplete = False,
        )
        """

    def testCommonSwapResponseIssues(self):
        """Test CommonSwapResponseIssues"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
